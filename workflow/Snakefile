import pandas as pd
import pysam
from snakemake.utils import min_version
min_version("5.30.1")

configfile: "config/config.yaml"

INPUT_DIR = config["input_dir"]
OUTPUT_DIR = config["output_dir"]
THREADS = config["threads"]
samples, = glob_wildcards(INPUT_DIR + "/{sample}.bam")

pooling_mode = "PR" if config["pooled"] else "R"

rule all:
    input:
        OUTPUT_DIR+"/aggregated_library_stats.tsv",
        OUTPUT_DIR+"/aggregated_junction_stats.tsv",
        expand("{out}/{p}/{sample}.{p}.gz", sample=samples, out=OUTPUT_DIR, p=pooling_mode)


include: "rules/junctions.smk"
include: "rules/sites.smk"
include: "rules/genome.smk"
include: "rules/pooled_sites.smk"


# rule add_replicates:
#     input:
#         stats=OUTPUT_DIR+"/J1/{sample}.stats"
#     output:
#         stats=OUTPUT_DIR+"/stats/{sample}.stats"
#     shell: "cp {input.stats} {output.stats}"


rule compute_rates:
    input:
        filtered_junctions=rules.filter_junctions.output.filtered_junctions,
        filtered_sites=rules.filter_sites.output.filtered_sites
    output:
        rates=OUTPUT_DIR+"/R/{sample}.R.gz"
    shell:
         "python3 -m workflow.scripts.compute_rates "
         "-j {input.filtered_junctions} "
         "-s {input.filtered_sites} "
         "-o {output.rates}"


rule compute_pooled_rates:
    input:
        filtered_junctions=rules.filter_junctions.output.filtered_junctions,
        filtered_pooled_sites=rules.filter_pooled_sites.output.filtered_pooled_sites
    output:
        rates=OUTPUT_DIR+"/PR/{sample}.PR.gz"
    shell:
         "python3 -m workflow.scripts.compute_rates "
         "-j {input.filtered_junctions} "
         "-s {input.filtered_pooled_sites} "
         "-o {output.rates}"
